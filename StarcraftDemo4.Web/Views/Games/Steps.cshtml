@model GameEntity
@{
    ViewData["Title"] = $"Game {Model.GameId} - All Steps";
}

<h1>@ViewData["Title"]</h1>

<div class="mb-3">
    <a asp-action="Details" asp-route-id="@Model.GameId" class="btn btn-secondary">Back to Game Details</a>
    <a asp-action="Index" class="btn btn-outline-secondary">Back to Game List</a>
</div>

<div class="card">
    <div class="card-header">
        <h5>Game Information</h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <strong>Game ID:</strong> @Model.GameId<br />
                <strong>Duration:</strong> @Model.TotalGameTime seconds<br />
                <strong>Total Steps:</strong> @Model.GameSteps.Count
            </div>
            <div class="col-md-6">
                <strong>Final Resources:</strong> @Model.FinalMinerals minerals, @Model.FinalGas gas<br />
                <strong>Final Units:</strong> @Model.FinalUnitCount/@Model.FinalUnitCap<br />
                <strong>Started:</strong> @Model.StartTime.ToString("yyyy-MM-dd HH:mm:ss")
            </div>
        </div>
    </div>
</div>

<div class="mt-4">
    @if (Model.GameSteps?.Any() == true)
    {
        <div class="table-responsive">
            <table class="table table-striped table-sm">
                <thead class="table-dark">
                    <tr>
                        <th>Step</th>
                        <th>Game Time</th>
                        <th>Timestamp</th>
                        <th>Move Type</th>
                        <th>Description</th>
                        <th>Object Built</th>
                        <th>Minerals</th>
                        <th>Gas</th>
                        <th>Units</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var step in Model.GameSteps.OrderBy(s => s.StepNumber))
                    {
                        <tr>
                            <td>@step.StepNumber</td>
                            <td>@step.GameTimeAtStep</td>
                            <td>@step.StepTimestamp.ToString("HH:mm:ss.fff")</td>
                            <td>
                                <span class="badge bg-@(GetMoveTypeBadgeColor(step.MoveType))">
                                    @step.MoveType
                                </span>
                            </td>
                            <td>@step.MoveDescription</td>
                            <td>@step.ObjectBuilt</td>
                            <td>@step.MineralsAtStep</td>
                            <td>@step.GasAtStep</td>
                            <td>@step.UnitCountAtStep/@step.UnitCapAtStep</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <p>No steps recorded for this game.</p>
        </div>
    }
</div>

@functions {
    private string GetMoveTypeBadgeColor(string moveType)
    {
        return moveType switch
        {
            "Unit" => "primary",
            "Structure" => "success",
            "Upgrade" => "warning",
            "Addon" => "info",
            "EnergyUnit" => "secondary",
            _ => "dark"
        };
    }
}